<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>サイト紹介 on 頭のなかの技術帖</title>
    <link>https://Yuki-Wada.github.io/my-hugo-site/</link>
    <description>Recent content in サイト紹介 on 頭のなかの技術帖</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <atom:link href="https://Yuki-Wada.github.io/my-hugo-site/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>双対問題</title>
      <link>https://Yuki-Wada.github.io/my-hugo-site/blog/2025/07/18/dual-problem/</link>
      <pubDate>Fri, 18 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://Yuki-Wada.github.io/my-hugo-site/blog/2025/07/18/dual-problem/</guid>
      <description>&lt;script&gt;&#xA;function details_open(bool){&#xA;  const elems = document.getElementsByTagName(&#39;details&#39;);&#xA;  const button = document.getElementById(&#39;detail-open-button&#39;);&#xA;  const detailsOpenNext = button.innerText === &#34;証明を開く&#34;;&#xA;  if (detailsOpenNext){&#xA;    button.innerText = &#34;証明を閉じる&#34;;&#xA;  }&#xA;  else {&#xA;    button.innerText = &#34;証明を開く&#34;;&#xA;  }&#xA;&#xA;  for(elem of elems){&#xA;    elem.open = detailsOpenNext;&#xA;  }&#xA;}&#xA;&lt;/script&gt;&#xA;&lt;p&gt;&lt;button type=&#34;button&#34; id=&#34;detail-open-button&#34; onclick=&#34;details_open(true)&#34;&gt;証明を開く&lt;/button&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;概要&#34;&gt;概要&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e6%a6%82%e8%a6%81&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;最適化問題を扱っていると、「主問題に対して双対問題を立てる」、「双対ギャップを評価する」、「KKT条件を使って解の最適性を確認する」といった内容がよく出てきます。&#xA;その一方で、双対問題の定義の背景や、強双対性が成り立つための条件がどこまで一般的なのかをあらためて整理して理解しようとすると、見落としている点が意外と多いことに気づきます。&lt;/p&gt;&#xA;&lt;p&gt;特に、双対性に関する話題では「弱双対性は常に成り立つが、強双対性は条件付きである」ということが肝になります。さらに、実際の問題で強双対性が成り立つかどうかは、スレーター条件やその緩和条件など、実行可能領域の性質に大きく依存します。&lt;/p&gt;&#xA;&lt;p&gt;そこで本記事では、双対問題の定義からはじまり、弱双対性・強双対性とその成立条件まで、理論と実践の両面を意識しながら一通りの流れを整理していきます。&#xA;双対理論の要点を確認するための、手元に置いておきたい「チートシート」として読んでいただければと思います。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;この記事で伝えたいこと&#34;&gt;この記事で伝えたいこと&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e3%81%93%e3%81%ae%e8%a8%98%e4%ba%8b%e3%81%a7%e4%bc%9d%e3%81%88%e3%81%9f%e3%81%84%e3%81%93%e3%81%a8&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;最適化問題における「双対性」は理論的にも応用的にも重要な概念ですが、双対問題の定義、弱双対性・強双対性、そしてそれらが成立する条件（スレーター条件など）を一貫して整理した資料は意外と少なく、学習のたびに混乱しがちです。&lt;/p&gt;&#xA;&lt;p&gt;本記事では、双対問題の定式化の背景や意味、理論的性質、そして強双対性を保証する条件について丁寧に整理し、一つの流れで全体像を捉えることを目的としています。&#xA;特に、凸最適化問題に遭遇したときにどのように双対問題を定式化し、どの条件を確認すればよいかを判断するための、実践的な「チートシート」として活用できる内容を目指しています。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;この記事の対象者&#34;&gt;この記事の対象者&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e3%81%93%e3%81%ae%e8%a8%98%e4%ba%8b%e3%81%ae%e5%af%be%e8%b1%a1%e8%80%85&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;双対問題の定義や導出方法を体系的に理解したい方&lt;/li&gt;&#xA;&lt;li&gt;弱双対性と強双対性の違いやその意味を整理したい方&lt;/li&gt;&#xA;&lt;li&gt;スレーター条件やその緩和形など、強双対性の成立条件を正確に把握したい方&lt;/li&gt;&#xA;&lt;li&gt;凸最適化問題における主問題・双対問題の関係性を理論的に押さえておきたい方&lt;/li&gt;&#xA;&lt;li&gt;数理最適化や機械学習などの実装・研究において、双対性を実践的に利用したい方&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;参考記事&#34;&gt;参考記事&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e5%8f%82%e8%80%83%e8%a8%98%e4%ba%8b&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;凸関数の定義・性質は&lt;a href=&#34;https://Yuki-Wada.github.io/my-hugo-site/blog/2025/07/15/convex-function/&#34;&gt;この記事&lt;/a&gt;も参考にしてください。&lt;/li&gt;&#xA;&lt;li&gt;不等式制約付き最適化問題については&lt;a href=&#34;https://Yuki-Wada.github.io/my-hugo-site/blog/2025/07/16/inequality-constrained-optimization/&#34;&gt;この記事&lt;/a&gt;も参考にしてください。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;双対問題&#34;&gt;双対問題&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e5%8f%8c%e5%af%be%e5%95%8f%e9%a1%8c&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;なぜ双対問題を考えるのか&#34;&gt;なぜ「双対問題」を考えるのか&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e3%81%aa%e3%81%9c%e5%8f%8c%e5%af%be%e5%95%8f%e9%a1%8c%e3%82%92%e8%80%83%e3%81%88%e3%82%8b%e3%81%ae%e3%81%8b&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;制約付き最適化問題において、制約を満たしつつ目的関数を最小化する解を直接求めるのは、解析的にも計算的にも困難なことがあります。&#xA;そこで登場するのが&lt;strong&gt;ラグランジュ関数&lt;/strong&gt;による「緩和」の考え方です。&lt;/p&gt;</description>
    </item>
    <item>
      <title>不等式制約付き最適化問題</title>
      <link>https://Yuki-Wada.github.io/my-hugo-site/blog/2025/07/16/inequality-constrained-optimization/</link>
      <pubDate>Wed, 16 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://Yuki-Wada.github.io/my-hugo-site/blog/2025/07/16/inequality-constrained-optimization/</guid>
      <description>&lt;h2 id=&#34;導入スレーター条件強双対を軸に&#34;&gt;導入（スレーター条件・強双対を軸に）&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e5%b0%8e%e5%85%a5%e3%82%b9%e3%83%ac%e3%83%bc%e3%82%bf%e3%83%bc%e6%9d%a1%e4%bb%b6%e5%bc%b7%e5%8f%8c%e5%af%be%e3%82%92%e8%bb%b8%e3%81%ab&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;本記事では、不等式制約付き最適化問題の基本的な構造を定式化したうえで、ラグランジュ緩和関数や KKT 条件（Karush-Kuhn-Tucker 条件）といった重要概念について紹介します。特に、最適化問題における実行可能性・凸性・滑らかさといった性質が、どのように解の存在や性質に関係しているのかを明確にします。&lt;/p&gt;&#xA;&lt;p&gt;また、KKT 条件がどのような前提のもとで最適解の特徴づけに使われるか、その背後にある直観や理論的意義を読み解いていきます。最適化における双対性や制約付き問題の取扱いに関心のある読者に向け、数式だけでなく構造的な視点から理解を深めることを目指します。&lt;/p&gt;&#xA;&lt;h4 id=&#34;この記事で伝えたいこと&#34;&gt;この記事で伝えたいこと&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e3%81%93%e3%81%ae%e8%a8%98%e4%ba%8b%e3%81%a7%e4%bc%9d%e3%81%88%e3%81%9f%e3%81%84%e3%81%93%e3%81%a8&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;本記事では、凸最適化問題の定式化を踏まえたうえで、&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;なぜ双対問題を考えるのか&lt;/li&gt;&#xA;&lt;li&gt;なぜ強双対性が重要なのか&lt;/li&gt;&#xA;&lt;li&gt;スレーター条件がなぜ必要なのか&#xA;といった問いに答えることを目指します。&#xA;最適化の構造的理解に欠かせない「双対性の意味と限界」を、直観と定理の両面から読み解いていきます。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;記事の対象者&#34;&gt;記事の対象者&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e8%a8%98%e4%ba%8b%e3%81%ae%e5%af%be%e8%b1%a1%e8%80%85&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;凸最適化における双対性の本質を理解したい方&lt;/strong&gt;&#xA;　→ ラグランジュ双対、強双対性、スレーター条件といった理論的基盤を明確に把握したい方。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;単なる KKT 条件の丸暗記にとどまらず、適用の前提を押さえておきたい方&lt;/strong&gt;&#xA;　→ KKT 条件がなぜ成り立つのか、スレーター条件との関係を明確にしたい方。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;最適化理論の応用にあたって、主問題と双対問題の関係を正しく理解したい方&lt;/strong&gt;&#xA;　→ 統計的学習理論、経済学、制御理論などで、凸最適化を理論的に扱いたい方。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;凸解析・最適化理論を体系的に学び直したい方&lt;/strong&gt;&#xA;　→ 実行可能性・凸性・双対性といった核心的な概念を整理したい方。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;不等式制約付き最適化問題&#34;&gt;不等式制約付き最適化問題&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e4%b8%8d%e7%ad%89%e5%bc%8f%e5%88%b6%e7%b4%84%e4%bb%98%e3%81%8d%e6%9c%80%e9%81%a9%e5%8c%96%e5%95%8f%e9%a1%8c&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Definition（不等式制約付き最適化問題）&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;(1) 以下の問題を不等式制約付き最適化問題 \(\mathcal{P} \left( f, \{g _ {i}\}, \{h _ {j}\} \right)\) と定義します。&#xA;\[ \begin{align*}   \text{infimum} \quad &amp;amp; f(x) \\   \text{subject to} \quad   &amp;amp; g _ {i}(x) \leq 0 \quad (\forall \, i) \\   &amp;amp; h _ {j}(x) = 0 \quad (\forall \, j)   \end{align*} \]&lt;/p&gt;</description>
    </item>
    <item>
      <title>凸関数の性質</title>
      <link>https://Yuki-Wada.github.io/my-hugo-site/blog/2025/07/15/convex-function/</link>
      <pubDate>Tue, 15 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://Yuki-Wada.github.io/my-hugo-site/blog/2025/07/15/convex-function/</guid>
      <description>&lt;h2 id=&#34;導入&#34;&gt;導入&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e5%b0%8e%e5%85%a5&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;数理最適化の問題を解くとき、「この関数が凸かどうか」は非常に重要な判断基準になります。なぜなら、関数が凸であれば、任意の局所最小解が大域最小解と一致するという性質があるからです。&lt;/p&gt;&#xA;&lt;p&gt;このような性質により、凸関数は最適化理論の中で特別な位置を占めています。機械学習における損失関数の設計、経済学の効用最大化問題、エンジニアリング分野でのコスト最小化など、さまざまな応用において問題の解析可能性やアルゴリズムの収束保証が凸性に依存しています。&lt;/p&gt;&#xA;&lt;p&gt;本記事では、まず凸関数の定義を確認し、その幾何的な直感と数学的性質を整理していきます。さらに、連続性や接線による特徴づけといった性質を通して、凸関数がなぜ最適化の世界でこれほどまでに重視されるのかを明らかにしていきます。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;この記事で伝えたいこと&#34;&gt;この記事で伝えたいこと&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e3%81%93%e3%81%ae%e8%a8%98%e4%ba%8b%e3%81%a7%e4%bc%9d%e3%81%88%e3%81%9f%e3%81%84%e3%81%93%e3%81%a8&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;本記事では、最適化理論の基礎をなす&lt;strong&gt;凸関数&lt;/strong&gt;について、定義・直感的理解・性質の多面的な視点から解説します。単なる定義の確認にとどまらず、&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;なぜ凸関数が最適化において重要なのか&lt;/li&gt;&#xA;&lt;li&gt;どのようにして凸性が解析やアルゴリズム設計の支えとなるのか&lt;/li&gt;&#xA;&lt;li&gt;凸関数の性質がどのように最適性や大域的最小性に結びつくのか&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;といった本質的な理解を目指します。&lt;/p&gt;&#xA;&lt;p&gt;数学的に厳密な議論をベースとしつつ、&lt;strong&gt;図解や幾何的イメージ&lt;/strong&gt;を通じて、読者が自らの言葉で「凸性とは何か」を語れるようになることが、本記事の最終的なゴールです。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;記事の対象者&#34;&gt;記事の対象者&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e8%a8%98%e4%ba%8b%e3%81%ae%e5%af%be%e8%b1%a1%e8%80%85&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;凸関数の定義と性質を体系的に学びたい学部生・大学院生&lt;/li&gt;&#xA;&lt;li&gt;機械学習や最適化理論を理論的に深く理解したいエンジニア&lt;/li&gt;&#xA;&lt;li&gt;最適性条件（KKT条件など）に向けた前提知識を強化したい読者&lt;/li&gt;&#xA;&lt;li&gt;数理最適化を厳密に学ぶ中で、「なぜ凸性が重要なのか」を知りたい人&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;&lt;h4 id=&#34;参考記事&#34;&gt;参考記事&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e5%8f%82%e8%80%83%e8%a8%98%e4%ba%8b&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;凸集合の定義・性質は&lt;a href=&#34;https://Yuki-Wada.github.io/my-hugo-site/blog/2025/07/14/convex-set/&#34;&gt;この記事&lt;/a&gt;も参考にしてください。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;凸関数の定義&#34;&gt;凸関数の定義&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e5%87%b8%e9%96%a2%e6%95%b0%e3%81%ae%e5%ae%9a%e7%be%a9&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;「凸関数」という概念は、単に数学的に美しいだけでなく、最適化問題の性質を決定づける核心的な構造を持っています。関数が凸であることは、最適解の存在や一意性、アルゴリズムによる求解の可能性を大きく左右します。&lt;/p&gt;&#xA;&lt;p&gt;実際、関数が凸であれば、任意の局所最小点が同時に大域最小点であるという強力な性質が得られます。これは、複雑な非線形問題を扱う現代の最適化理論において、計算可能性や収束保証の観点から極めて大きな意味をもちます。&lt;/p&gt;&#xA;&lt;p&gt;さらに興味深いのは、凸性には幾何的・代数的・解析的な複数の側面があることです。図形的には「グラフ上の2点を結ぶ線分が常にグラフの上側にある」といった視覚的な直感で捉えられ、解析的には「接平面がグラフの下に位置する」ことや「傾きが単調に増加する」ことなどと結びつきます。&lt;/p&gt;&#xA;&lt;p&gt;このように、凸関数という構造は、単なる定義にとどまらず、解析性・計算性・幾何性が高度に調和した概念です。そのため、最適化の理論と応用のいずれにおいても、避けては通れない中心的な役割を果たします。&lt;/p&gt;&#xA;&lt;p&gt;それでは次に、こうした豊かな性質を持つ「凸関数」の定義を、厳密に確認していきましょう。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;&lt;strong&gt;Definition (凸関数)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;(1) 集合 \(C \subset \mathbb{R}^n\) を凸集合とし、関数 \(f: C \to \mathbb{R}\) を \(C\) 上の関数とします。&#xA;任意の \(x, y \in C\)、\(0 \leq \lambda \leq 1\) に対して以下の不等式が成り立つとき、\(f\) を凸関数と定義します。&lt;br&gt;&#xA;\[ \begin{gather*}  f(\lambda x + (1 - \lambda)y) \leq \lambda f(x) + (1 - \lambda)f(y)  \end{gather*} \]&lt;/p&gt;</description>
    </item>
    <item>
      <title>凸集合の性質</title>
      <link>https://Yuki-Wada.github.io/my-hugo-site/blog/2025/07/14/convex-set/</link>
      <pubDate>Mon, 14 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://Yuki-Wada.github.io/my-hugo-site/blog/2025/07/14/convex-set/</guid>
      <description>&lt;script&gt;&#xA;var elems = document.getElementsByTagName(&#39;details&#39;);&#xA;var elems2 = document.getElementById(&#39;accordion&#39;);&#xA;function details_open(bool){&#xA;  for(elem of elems){&#xA;    elem.open = bool;&#xA;  }&#xA;}&#xA;&lt;/script&gt;&#xA;&lt;button type=&#34;button&#34; id=&#34;accordion&#34; onclick=&#34;details_open(true)&#34;&gt;&#xA;  証明を開く&#xA;&lt;/button&gt;&#xA;&lt;button type=&#34;button&#34; onclick=&#34;details_open(false)&#34;&gt;証明を閉じる&lt;/button&gt;&#xA;&lt;h2 id=&#34;概要&#34;&gt;概要&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e6%a6%82%e8%a6%81&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h4 id=&#34;この記事で伝えたいこと&#34;&gt;この記事で伝えたいこと&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e3%81%93%e3%81%ae%e8%a8%98%e4%ba%8b%e3%81%a7%e4%bc%9d%e3%81%88%e3%81%9f%e3%81%84%e3%81%93%e3%81%a8&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;本記事では、凸集合に関する基本的な概念と性質を確認したうえで、有限次元実ベクトル空間における凸集合の分離定理を丁寧に解説・証明します。&lt;/p&gt;&#xA;&lt;p&gt;抽象的な定理を具体的な構成に落とし込むことで、「分離」とは何を意味し、どのように実現されるのかを直観的かつ論理的に理解することを目指します。&lt;/p&gt;&#xA;&lt;p&gt;特に、閉集合・凸包・閉凸包といった概念の違いが、分離定理にどのように関わるかを具体例とともに明らかにし、単なる定理の理解にとどまらず、それを支える構造や条件の意義にも踏み込みます。&lt;/p&gt;&#xA;&lt;h4 id=&#34;記事の対象者&#34;&gt;記事の対象者&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e8%a8%98%e4%ba%8b%e3%81%ae%e5%af%be%e8%b1%a1%e8%80%85&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;凸集合や凸解析の基礎を体系的に見直したい方&lt;br&gt;&#xA;　→ 凸集合の定義、凸包・閉包・閉凸包といった基本概念をしっかり整理したい方。&lt;/li&gt;&#xA;&lt;li&gt;「凸集合の分離定理」の意味や使い所を具体的に理解したい方&lt;br&gt;&#xA;　→ 抽象的な定理の背景や証明手法を、直感的なレベルで掘り下げたい方。&lt;/li&gt;&#xA;&lt;li&gt;抽象的な定理（Hahn-Banachの定理など）に対して直観的な足場を持ちたい方&lt;br&gt;&#xA;　→ 抽象数学や関数解析における分離定理に接したが、まずは有限次元での具体構成を通して理解したい方。&lt;/li&gt;&#xA;&lt;li&gt;最適化・統計的学習理論・経済学などの分野で凸集合を扱う方&lt;br&gt;&#xA;　→ 現実の問題に現れる「分離可能性」の数学的背景をしっかり理解しておきたい方。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;凸集合の定義&#34;&gt;凸集合の定義&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%e5%87%b8%e9%9b%86%e5%90%88%e3%81%ae%e5%ae%9a%e7%be%a9&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h4 id=&#34;definition-凸集合&#34;&gt;Definition (凸集合)&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#definition-%e5%87%b8%e9%9b%86%e5%90%88&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ベクトル空間 \(V\) の部分集合 \(C\) を考えます。&#xA;任意の \(x, y \in C\) と任意の \(0 \leq \lambda \leq 1\) に対して、&#xA;\[ \begin{gather*}  \lambda x + (1 - \lambda) y \in C  \end{gather*} \]&#xA;が成り立つとき、\(C\) を凸集合と定義します。&lt;/p&gt;</description>
    </item>
    <item>
      <title>検索結果</title>
      <link>https://Yuki-Wada.github.io/my-hugo-site/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://Yuki-Wada.github.io/my-hugo-site/search/</guid>
      <description></description>
    </item>
  </channel>
</rss>
